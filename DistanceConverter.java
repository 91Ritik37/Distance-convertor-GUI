/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiApplication;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class DistanceConverter extends javax.swing.JFrame {
    
    String[] distanceUnits = {
"units",
"millimeter(mi)",
"Centimeter (cm)",
"Meter (m)",
"Kilometer (km)",
"Inch (in)",
"Foot (ft)",
"Yard (yd)",
"Mile (mi)" 
};

    /**
     * Creates new form DistanceConverter
     */
    public DistanceConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {

        textField1 = new java.awt.TextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstDistance = new javax.swing.JComboBox<>();
        secondDistance = new javax.swing.JComboBox<>();
        t2 = new javax.swing.JTextField();
        t1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        firstDistanceunit = new javax.swing.JLabel();
        secondDistanceunit = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setText("Distance Converter");

        firstDistance.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        firstDistance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one...", "millimeter (mm)", "Centimeter (cm)", "Meter (m)", "Kilometer (km)", "Inch (in)", "Foot (ft)", "Yard (yd)", "Mile (mi)" }));
        firstDistance.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstDistanceItemStateChanged(evt);
            }
        });
        firstDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstDistanceActionPerformed(evt);
            }
        });

        secondDistance.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        secondDistance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one...", "millimeter (mm)", "Centimeter (cm)", "Meter (m)", "Kilometer (km)", "Inch (in)", "Foot (ft)", "Yard (yd)", "Mile (mi)" }));
        secondDistance.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secondDistanceItemStateChanged(evt);
            }
        });

        t2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        t1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("From");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setText("To");

        firstDistanceunit.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        firstDistanceunit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstDistanceunit.setText("units");

        secondDistanceunit.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        secondDistanceunit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        secondDistanceunit.setText("units");

        jButton1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t1)
                            .addComponent(firstDistanceunit, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(243, 243, 243)
                                    .addComponent(secondDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secondDistanceunit, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondDistanceunit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstDistanceunit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        firstDistance.setSelectedIndex(0);
        secondDistance.setSelectedIndex(0);
        t1.setText(null);
        t2.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void firstDistanceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstDistanceItemStateChanged
        
        int position= firstDistance.getSelectedIndex();
        firstDistanceunit.setText(distanceUnits[position]);
    }//GEN-LAST:event_firstDistanceItemStateChanged

    private void secondDistanceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_secondDistanceItemStateChanged
        int position= secondDistance.getSelectedIndex();
        secondDistanceunit.setText(distanceUnits[position]);
    }//GEN-LAST:event_secondDistanceItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //convert Distance :
       if(firstDistance.getSelectedIndex()==0 || secondDistance.getSelectedIndex()==0 || t1.getText().equals("")){
           JOptionPane.showMessageDialog(null,"You must give input!!","Error conversion",
                   JOptionPane.INFORMATION_MESSAGE
                   );
           return;
       }
       double amountToChange = Double.parseDouble(t1.getText());
       double amount=0.0;
       
       String s1 = firstDistance.getSelectedItem().toString();
       String s2 = secondDistance.getSelectedItem().toString();
       
       if(s1 == "millimeter (mm)"){
           switch(s2){
               case "Centimeter (cm)" : amount = amountToChange*0.1;break;
               case "Meter (m)" : amount =  amountToChange*0.001;break;
               case "Kilometer (km)":amount =  amountToChange*0.000001;break;
               case "Inch (in)":amount =  amountToChange*0.03937007874;break;
               case "Foot (ft)":amount =  amountToChange*0.003280839895;break;
               case "Yard (yd)" :amount =  amountToChange*0.00109361;break;
               case "Mile (mi)":amount =  amountToChange*6.213693181818e-7;break;
               default : amount=amountToChange;
           } 
       }
           else if(s1=="Centimeter (cm)") {
        	   
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*10;break;
               case "Meter (m)" : amount =  amountToChange*0.01;break;
               case "Kilometer (km)":amount =  amountToChange*0.00001;break;
               case "Inch (in)":amount =  amountToChange*0.3937007874;break;
               case "Foot (ft)":amount =  amountToChange*0.03280839895;break;
               case "Yard (yd)" :amount =  amountToChange*0.0109361;break;
               case "Mile (mi)":amount =  amountToChange*6.213693181818e-6;break;
               default : amount=amountToChange;
           }
       }
           else if ( s1=="Kilometer (km)") {
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*1000000;break;
               case "Meter (m)" : amount =  amountToChange* 1000;break;
               case "Centimeter (cm)" :amount =  amountToChange*100000;break;
               case "Inch (in)":amount =  amountToChange*39370.07874;break;
               case "Foot (ft)":amount =  amountToChange*3280.839895;break;
               case "Yard (yd)" :amount =  amountToChange*1093.613;break;
               case "Mile (mi)":amount =  amountToChange*6.213693181818e-5;break;
               default : amount=amountToChange;
           }
         }
           else if(s1=="Inch (in)"){
        	   
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*25.4;break;
               case "Meter (m)" : amount =  amountToChange*0.0254;break;
               case "Centimeter (cm)" :amount =  amountToChange*2.54;break;
               case "Kilometer (km)":amount =  amountToChange*2.54e-5;break;
               case "Foot (ft)":amount =  amountToChange*0.0833333;break;
               case "Yard (yd)" :amount =  amountToChange*0.0277778;break;
               case "Mile (mi)":amount =  amountToChange*1.57828e-5;break;
               default : amount=amountToChange;
           }
         }
           else if (s1=="Foot (ft)") {
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*304.8;break;
               case "Meter (m)" : amount =  amountToChange*0.3048;break;
               case "Centimeter (cm)" :amount =  amountToChange*30.48;break;
               case "Kilometer (km)":amount =  amountToChange*0.0003048;break;
               case  "Inch (in)":amount =  amountToChange*12;break;
               case "Yard (yd)" :amount =  amountToChange*0.3333333;break;
               case "Mile (mi)":amount =  amountToChange*0.000189394;break;
               default : amount=amountToChange;
           }
           }
           else if (s1=="Yard (yd)") {
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*914.4;break;
               case "Meter (m)" : amount =  amountToChange*0.9144;break;
               case "Centimeter (cm)" :amount =  amountToChange*91.44;break;
               case "Kilometer (km)":amount =  amountToChange*0.000914;break;
               case  "Inch (in)":amount =  amountToChange*36;break;
               case  "Foot (ft)":amount =  amountToChange*3;break;
               case "Mile (mi)":amount =  amountToChange*0.000568182;break;
               default : amount=amountToChange;
           }
         }
           else if (s1=="Mile (mi)") {
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*1609344;break;
               case "Meter (m)" : amount =  amountToChange*1609.344;break;
               case "Centimeter (cm)" :amount =  amountToChange*160934;break;
               case "Kilometer (km)":amount =  amountToChange*1.609344;break;
               case  "Inch (in)":amount =  amountToChange*63360;break;
               case  "Foot (ft)":amount =  amountToChange*5280;break;
               case  "Yard (yd)":amount =  amountToChange*1760;break;
               default : amount=amountToChange;
           }
         }
           else if (s1== "Meter (m)") {
        	   switch(s2){
               case "millimeter (mm)" : amount = amountToChange*1000;break;
               case "Mile (mi)" : amount =  amountToChange*0.000621371;break;
               case "Centimeter (cm)" :amount =  amountToChange*100;break;
               case "Kilometer (km)":amount =  amountToChange*0.001;break;
               case  "Inch (in)":amount =  amountToChange*39.37;break;
               case  "Foot (ft)":amount =  amountToChange*3.28084;break;
               case  "Yard (yd)":amount =  amountToChange*1.09361;break;
               default : amount=amountToChange;
           }
         }
       String value = String.format("%.6f", amount);
       t2.setText(value);
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void firstDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstDistanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstDistanceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DistanceConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DistanceConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DistanceConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DistanceConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DistanceConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> firstDistance;
    private javax.swing.JLabel firstDistanceunit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private  javax.swing.JLabel jLabel3;
    private  javax.swing.JPanel jPanel1;
     private  javax.swing.JComboBox<String> secondDistance;
     private   javax.swing.JLabel secondDistanceunit;
     private   javax.swing.JTextField t1;
     private   javax.swing.JTextField t2;
     private   java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
